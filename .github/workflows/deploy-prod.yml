name: Deploy To Production
on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      app_name:
        type: choice
        description: "App Name"
        required: true
        options:
          - api
          - nextjs
          - nginx
          - all
        default: "nextjs"
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  start-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deployment status
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: production

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build Docker Images
        uses: ./.github/actions/build
        with:
          app: ${{ github.event.inputs.app_name }}

      - name: Authenticate with Registry and Push Docker Images
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/docker-login@v1
        with:
          login-server: "cheapbaltimorehouses.azurecr.io"
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push All Docker Images
        if: ${{ github.event.inputs.app_name == 'all' }}
        run: |
          if [ ${{ inputs.app_name }} == 'all' ]; then
          docker push cheapbmorehousesregistry.azurecr.io/api:latest
          docker push cheapbmorehousesregistry.azurecr.io/nginx:latest
          docker push cheapbmorehousesregistry.azurecr.io/nextjs:latest
          else
          docker push cheapbaltimorehouses.azurecr.io/cheapbaltimorehouses-${{ inputs.app_name }}:latest
          fi
        shell: bash

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2.2.9 # This action triggers an App restart in Azure App Service
        with:
          app-name: "cheapbmorehouses"
          configuration-file: "docker-compose.yml"

      - name: Update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
